// This code is an example of API
include <Windows.h>

struct _2D:
  var x: float = 0
  var y: float = 0
end

struct _3D:
  var x: float = 0
  var y: float = 0
  var z: float = 0
end

function get_time()(float):
  var st: SYSTEMTIME = {} // null initialisation
  GetSystemTime(&st)

  var time: float = st.wHour * 10000.0f + st.wMinute * 100.0f + st.wSecond + st.wMilliseconds / 1000.0f
  return time
end

function rand()(float):
  var a: float = get_time()
  var b: float = get_time() / 120.0f

  return (a * b)
end

function rand_max(max: float):
  var result = rand()

  while (result > max):
    result *= 0.25f
  end
  
end

function rand_min(min: float):
  var result = rand()

  while (result < min):
    result *= 1.25f
  end
  
end

function rand_range(min: float, max: float)(float):
  var result: float = rand()

  while (result < min or result > max):
    if (result < min):
      result *= 1.25f
    elif (result > max):
      result *= 0.25f
    end
  end

  return result
end

std::string getExecutableDirectory()
{
  char path[MAX_PATH];
  GetModuleFileNameA(NULL, path, MAX_PATH);
  std::string fullPath(path);
  size_t pos = fullPath.find_last_of("\\/");
  return (std::string::npos == pos) ? "" : fullPath.substr(0, pos);
}